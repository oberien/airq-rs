#[cfg(feature = "blocking")]
use std::time::Instant;
use std::time::Duration;
#[cfg(feature = "blocking")]
use std::thread;
#[cfg(feature = "blocking")]
use std::marker::PhantomData;
use std::collections::HashMap;
use std::sync::{Arc, Mutex};

use serde::de::DeserializeOwned;
use serde_json::Value;
#[cfg(feature = "blocking")]
use reqwest::blocking::Client;
#[cfg(not(feature = "blocking"))]
use reqwest::Client;
use block_modes::{BlockMode, Cbc, block_padding::Pkcs7};
use aes::Aes256;
use zeroconf::{MdnsBrowser, ServiceDiscovery};
use zeroconf::prelude::*;

mod error;
mod data;

pub use error::*;
pub use data::*;

type Aes256Cbc = Cbc<Aes256, Pkcs7>;

pub struct AirQ {
    key: [u8; 32],
    prefix: String,
}

impl AirQ {
    pub fn new(domain: &str, password: &str) -> AirQ {
        let mut key = [b'0'; 32];
        let len = password.len().min(32);
        key[..len].copy_from_slice(&password.as_bytes()[..len]);
        AirQ {
            key,
            prefix: format!("http://{}", domain),
        }
    }

    pub fn find_in_network() -> String {
        let airq = Arc::new(Mutex::new(None));
        let airq2 = Arc::clone(&airq);

        let callback = move |result: zeroconf::Result<ServiceDiscovery>, _| {
            if let Ok(discovery) = result {
                if discovery.name().ends_with("air-q") {
                    *airq2.lock().unwrap() = Some(discovery.address().clone());
                }
            }
        };

        let mut browser = MdnsBrowser::new("_http._tcp");
        browser.set_service_discovered_callback(Box::new(callback));
        let event_loop = browser.browse_services().unwrap();
        while airq.lock().unwrap().is_none() {
            event_loop.poll(Duration::from_secs(0)).unwrap();
        }
        let addr = airq.lock().unwrap().take().unwrap();
        addr
    }

    fn client(&self) -> Client {
        Client::builder()
            .timeout(Duration::from_secs(120))
            .build()
            .unwrap()
    }

    #[cfg(not(feature = "blocking"))]
    async fn request_raw(&self, path: &str) -> Result<String> {
        Ok(self.client().get(&format!("{}{}", self.prefix, path))
            .send().await?
            .text().await?)
    }
    #[cfg(feature = "blocking")]
    fn request_raw(&self, path: &str) -> Result<String> {
        Ok(self.client().get(&format!("{}{}", self.prefix, path))
            .send()?
            .text()?)
    }
    #[cfg(not(feature = "blocking"))]
    async fn request<T: DeserializeOwned>(&self, path: &str) -> Result<T> {
        let client = self.client().get(&format!("{}{}", self.prefix, path));
        let res = client.send().await?;
        let json = res.json().await?;
        Ok(json)
    }
    #[cfg(feature = "blocking")]
    fn request<T: DeserializeOwned>(&self, path: &str) -> Result<T> {
        Ok(self.client().get(&format!("{}{}", self.prefix, path))
            .send()?
            .json()?)
    }

    #[cfg(not(feature = "blocking"))]
    pub async fn blink(&self) -> Result<DeviceId> {
        self.request("/blink").await
    }
    #[cfg(feature = "blocking")]
    pub fn blink(&self) -> Result<DeviceId> {
        self.request("/blink")
    }

    #[cfg(not(feature = "blocking"))]
    pub async fn data_11(&self) -> Result<Data14> {
        self.data_raw().await
    }
    #[cfg(feature = "blocking")]
    pub fn data_11(&self) -> Result<Data14> {
        self.data_raw()
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn data_14(&self) -> Result<Data14> {
        self.data_raw().await
    }
    #[cfg(feature = "blocking")]
    pub fn data_14(&self) -> Result<Data14> {
        self.data_raw()
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn data_raw<T: DeserializeOwned>(&self) -> Result<T> {
        self.decrypt(&self.request::<Encrypted>("/data").await?.content)
    }
    #[cfg(feature = "blocking")]
    pub fn data_raw<T: DeserializeOwned>(&self) -> Result<T> {
        self.decrypt(&self.request::<Encrypted>("/data")?.content)
    }

    #[cfg(feature = "blocking")]
    pub fn live_data_11(&self) -> Live<Data11> {
        self.live_data_raw()
    }
    #[cfg(feature = "blocking")]
    pub fn live_data_14(&self) -> Live<Data14> {
        self.live_data_raw()
    }
    #[cfg(feature = "blocking")]
    pub fn live_data_raw<T: DeserializeOwned>(&self) -> Live<T> {
        Live {
            last_request: Instant::now() - Duration::from_millis(2000),
            airq: &self,
            _marker: PhantomData,
        }
    }

    #[cfg(not(feature = "blocking"))]
    pub async fn config(&self) -> Result<Value> {
        self.decrypt(&self.request::<Encrypted>("/config").await?.content)
    }
    #[cfg(feature = "blocking")]
    pub fn config(&self) -> Result<Value> {
        self.decrypt(&self.request::<Encrypted>("/config")?.content)
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn ping(&self) -> Result<Value> {
        let Encrypted { deviceid: _, content } = self.request("/ping").await?;
        self.decrypt(&content)
    }
    #[cfg(feature = "blocking")]
    pub fn ping(&self) -> Result<Value> {
        let Encrypted { deviceid: _, content } = self.request("/ping")?;
        self.decrypt(&content)
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn standardpass(&self) -> Result<bool> {
        self.request("/standardpass").await
    }
    #[cfg(feature = "blocking")]
    pub fn standardpass(&self) -> Result<bool> {
        self.request("/standardpass")
    }

    #[cfg(not(feature = "blocking"))]
    pub async fn dir<S: AsRef<str>>(&self, path: S) -> Result<Vec<String>> {
        self.decrypt(&self.request_raw(&format!("/dir?request={}", self.encrypt(path.as_ref().as_bytes())?)).await?)
    }
    #[cfg(feature = "blocking")]
    pub fn dir<S: AsRef<str>>(&self, path: S) -> Result<Vec<String>> {
        self.decrypt(&self.request_raw(&format!("/dir?request={}", self.encrypt(path.as_ref():w.as_bytes())?))?)
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn dirbuff(&self) -> Result<Vec<FilePath>> {
        let files: HashMap<String, HashMap<String, HashMap<String, Vec<String>>>> = self.decrypt(&self.request_raw("/dirbuff").await?)?;
        Ok(Self::aggregate_dirbuff(files))
    }
    #[cfg(feature = "blocking")]
    pub fn dirbuff(&self) -> Result<Vec<FilePath>> {
        let files: HashMap<String, HashMap<String, HashMap<String, Vec<String>>>> = self.decrypt(&self.request_raw("/dirbuff")?)?;
        Ok(Self::aggregate_dirbuff(files))
    }
    fn aggregate_dirbuff(files: HashMap<String, HashMap<String, HashMap<String, Vec<String>>>>) -> Vec<FilePath> {
        let mut files: Vec<_> = files.into_iter().flat_map(|(year, months)| {
            let year = year.parse().unwrap();
            months.into_iter().flat_map(move |(month, days)| {
                let month = month.parse().unwrap();
                days.into_iter().flat_map(move |(day, timestamps)| {
                    let day = day.parse().unwrap();
                    timestamps.into_iter().map(move |timestamp| {
                        FilePath {
                            year,
                            month,
                            day,
                            timestamp: timestamp.parse().unwrap(),
                        }
                    })
                })
            })
        }).collect();
        files.sort();
       files
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_data_11<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data11>> {
        self.file_raw(path.as_ref()).await
    }
    #[cfg(feature = "blocking")]
    pub fn file_data_11<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data11>> {
        self.file_raw(path.as_ref())
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_data_14<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data14>> {
        self.file_raw(path.as_ref()).await
    }
    #[cfg(feature = "blocking")]
    pub fn file_data_14<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data14>> {
        self.file_raw(path.as_ref())
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_raw<T: DeserializeOwned>(&self, path: &str) -> Result<Vec<T>> {
        let lines = self.request_raw(&format!("/file?request={}", self.encrypt(path.as_bytes())?)).await?;
        self.aggregate_lines(lines)
    }
    #[cfg(feature = "blocking")]
    pub fn file_raw<T: DeserializeOwned>(&self, path: &str) -> Result<Vec<T>> {
        let lines = self.request_raw(&format!("/file?request={}", self.encrypt(path.as_bytes())?))?;
        self.aggregate_lines(lines)
    }
    fn aggregate_lines<T: DeserializeOwned>(&self, lines: String) -> Result<Vec<T>> {
        lines.lines()
            .filter(|line| !line.is_empty())
            .map(|line| self.decrypt(line))
            .collect()
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_recrypt_data_11<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data11>> {
        self.file_recrypt_raw(path.as_ref()).await
    }
    #[cfg(feature = "blocking")]
    pub fn file_recrypt_data_11<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data11>> {
        self.file_recrypt_raw(path.as_ref())
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_recrypt_data_14<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data14>> {
        self.file_recrypt_raw(path.as_ref()).await
    }
    #[cfg(feature = "blocking")]
    pub fn file_recrypt_data_14<S: AsRef<str>>(&self, path: S) -> Result<Vec<Data14>> {
        self.file_recrypt_raw(path.as_ref())
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn file_recrypt_raw<T: DeserializeOwned>(&self, path: &str) -> Result<Vec<T>> {
        let lines = self.request_raw(&format!("/file_recrypt?request={}", self.encrypt(path.as_bytes())?)).await?;
        self.aggregate_lines(lines)
    }
    #[cfg(feature = "blocking")]
    pub fn file_recrypt_raw<T: DeserializeOwned>(&self, path: &str) -> Result<Vec<T>> {
        let lines = self.request_raw(&format!("/file_recrypt?request={}", self.encrypt(path.as_bytes())?))?;
        self.aggregate_lines(lines)
    }
    #[cfg(not(feature = "blocking"))]
    pub async fn log(&self) -> Result<Vec<String>> {
        self.decrypt(&self.request::<Encrypted>("/log").await?.content)
    }
    #[cfg(feature = "blocking")]
    pub fn log(&self) -> Result<Vec<String>> {
        self.decrypt(&self.request::<Encrypted>("/log")?.content)
    }

    fn decrypt<T: DeserializeOwned>(&self, encrypted: &str) -> Result<T> {
        let mut decoded = base64::decode(encrypted)?;
        let iv = &decoded[..16];
        let cipher = Aes256Cbc::new_var(&self.key, iv).unwrap();
        let ciphertext = &mut decoded[16..];
        let plaintext = cipher.decrypt(ciphertext)?;
        Ok(serde_json::from_slice(plaintext)?)
    }

    fn encrypt(&self, plaintext: &[u8]) -> Result<String> {
        let iv: [u8; 16] = rand::random();
        let cipher = Aes256Cbc::new_var(&self.key, &iv).unwrap();
        let mut encrypted = vec![0; 16 + 16 * (plaintext.len() / 16 + 1)];
        encrypted[..16].copy_from_slice(&iv);
        encrypted[16..][..plaintext.len()].copy_from_slice(plaintext);
        let ciphertext = cipher.encrypt(&mut encrypted[16..], plaintext.len())?;
        assert_eq!(16 + ciphertext.len(), encrypted.len());
        Ok(base64::encode(encrypted))
    }

    pub async fn test(&self) {
        self.file_recrypt_data_14("2021/6/7/1623093314").await;
        // let encrypted = "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";
        // let mut encrypted = "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";
        // let mut encrypted = "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";
        let mut encrypted = "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";
        let mut encrypted = encrypted.replace("==", "==\n");
        let regex = regex::Regex::new("([^=])=([^=])").unwrap();
        let mut encrypted = regex.replace(&encrypted, "${1}=\n${2}").into_owned();
        dbg!(encrypted.lines().count());
        for decoded in encrypted.lines() {
            let mut decoded = decoded.to_string();
            while decoded.len() % 4 != 0 {
                println!("needed padding");
                decoded.push('=');
            }
            fn stuff(key: &[u8], base64: &str, inject_padding: bool) -> std::result::Result<(), Box<dyn std::error::Error>> {
                let mut decoded = base64::decode(base64)?;
                if inject_padding {
                    while decoded.len() % 16 != 0 {
                        decoded.push(0);
                    }
                    let mut pad_block = [16u8; 16];
                    let cipher = Aes256Cbc::new_var(key, &decoded[decoded.len()-16..]).unwrap();
                    let ciphertext = cipher.encrypt(&mut pad_block[..], 0).unwrap();
                    decoded.extend(ciphertext);
                }
                let iv = &decoded[..16];
                let cipher = Aes256Cbc::new_var(key, iv).unwrap();
                let ciphertext = &mut decoded[16..];
                let plaintext = cipher.decrypt(ciphertext)?;
                println!("{:?}", String::from_utf8_lossy(plaintext));
                Ok(())
            }
            if let Err(e) = stuff(&self.key, &decoded, false) {
                println!("error: {:?}, brute-forcing", e);
                let charset = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/=";
                'a: loop {
                    for c in charset.bytes() {
                        decoded.pop().unwrap();
                        decoded.push(c as char);
                        match stuff(&self.key, &decoded, false) {
                            Ok(_) => {
                                println!("{:?}", c as char);
                                break 'a;
                            },
                            Err(e) => println!("{:?}", e),
                        }
                    }
                    println!("injecting valid padding block");
                    let e = stuff(&self.key, &decoded, true);
                    println!("{:?}", e);
                    break;
                }
            }
        }
        panic!();
        // let mut decoded = base64::decode(&encrypted[..32872]).unwrap();
        let mut decoded = base64::decode(&encrypted).unwrap();
        // dbg!(String::from_utf8_lossy(&decoded));
        // dbg!(String::from_utf8_lossy(&decoded).lines().count());


        // for decoded in decoded.split_mut(|&b| b == b'\n') {
        //     let mut decoded = decoded.to_owned();
        //     if decoded.len() % 16 != 0 {
        //         let pad = 16 - decoded.len() % 16;
        //         for _ in 0..pad {
        //             decoded.push(pad as u8);
        //         }
        //     } else {
        //         for _ in 0..16 {
        //             decoded.push(16);
        //         }
        //     }
        //
        //     let iv = &decoded[..16];
        //     let cipher = Aes256Cbc::new_var(&self.key, iv).unwrap();
        //     let ciphertext = &mut decoded[16..];
        //     println!("{:#x?}", &ciphertext[ciphertext.len()-16..]);
        //     let plaintext = cipher.decrypt(ciphertext).unwrap();
        //     println!("{}", String::from_utf8_lossy(plaintext));
        // }
        while decoded.len() % 16 != 0 {
            decoded.push(0);
        }
        let mut pad_block = [0u8; 16];
        let cipher = Aes256Cbc::new_var(&self.key, &decoded[decoded.len()-16..]).unwrap();
        let ciphertext = cipher.encrypt(&mut pad_block[..], 0).unwrap();
        decoded.extend(ciphertext);

        let iv = &decoded[..16];
        let cipher = Aes256Cbc::new_var(&self.key, iv).unwrap();
        let ciphertext = &mut decoded[16..];
        println!("{:#x?}", &ciphertext[ciphertext.len()-16..]);
        let plaintext = cipher.decrypt(ciphertext).unwrap();
        println!("{}", String::from_utf8_lossy(plaintext));
    }
}

#[cfg(feature = "blocking")]
pub struct Live<'a, T: DeserializeOwned> {
    last_request: Instant,
    airq: &'a AirQ,
    _marker: PhantomData<T>,
}

#[cfg(feature = "blocking")]
impl<'a, T: DeserializeOwned> Iterator for Live<'a, T> {
    type Item = Result<T>;

    fn next(&mut self) -> Option<Self::Item> {
        let elapsed = self.last_request.elapsed();
        if elapsed.as_millis() < 1500 {
            thread::sleep(Duration::from_millis(1500) - elapsed);
        }
        self.last_request = Instant::now();
        Some(self.airq.data_raw())
    }
}
